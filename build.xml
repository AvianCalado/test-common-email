<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="commons-email-1.3.2-src">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="../../../../../.m2/repository/javax/mail/mail/1.4.5/mail-1.4.5.jar"/>
        <pathelement location="../../../../../.m2/repository/javax/activation/activation/1.1.1/activation-1.1.1.jar"/>
        <pathelement location="../../../../../.m2/repository/junit/junit/4.11/junit-4.11.jar"/>
        <pathelement location="../../../../../.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"/>
        <pathelement location="../../../../../.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar"/>
        <pathelement location="../../../../../.m2/repository/org/subethamail/subethasmtp/3.1.7/subethasmtp-3.1.7.jar"/>
        <pathelement location="../../../../../.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar"/>
        <pathelement location="../../../../../.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar"/>
        <pathelement location="../../../../../.m2/repository/org/powermock/powermock-module-junit4/1.4.12/powermock-module-junit4-1.4.12.jar"/>
        <pathelement location="../../../../../.m2/repository/org/powermock/powermock-module-junit4-common/1.4.12/powermock-module-junit4-common-1.4.12.jar"/>
        <pathelement location="../../../../../.m2/repository/org/powermock/powermock-core/1.4.12/powermock-core-1.4.12.jar"/>
        <pathelement location="../../../../../.m2/repository/org/javassist/javassist/3.16.1-GA/javassist-3.16.1-GA.jar"/>
        <pathelement location="../../../../../.m2/repository/org/powermock/powermock-reflect/1.4.12/powermock-reflect-1.4.12.jar"/>
        <pathelement location="../../../../../.m2/repository/org/powermock/powermock-api-easymock/1.4.12/powermock-api-easymock-1.4.12.jar"/>
        <pathelement location="../../../../../.m2/repository/org/powermock/powermock-api-support/1.4.12/powermock-api-support-1.4.12.jar"/>
        <pathelement location="../../../../../.m2/repository/org/easymock/easymock/3.1/easymock-3.1.jar"/>
        <pathelement location="../../../../../.m2/repository/cglib/cglib-nodep/2.2.2/cglib-nodep-2.2.2.jar"/>
        <pathelement location="../../../../../.m2/repository/org/objenesis/objenesis/1.2/objenesis-1.2.jar"/>
        <pathelement location="../../../../../.m2/repository/org/slf4j/slf4j-jdk14/1.6.1/slf4j-jdk14-1.6.1.jar"/>
    </path>
    <path id="commons-email-1.3.2-src.classpath">
        <pathelement location="target/classes"/>
        <pathelement location="target/test-classes"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.commons-email-1.3.2-src.classpath">
        <path refid="commons-email-1.3.2-src.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.EmailTest.classpath">
        <path refid="commons-email-1.3.2-src.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.EmailTest.testAddHeaderEmptyName.classpath">
        <path refid="commons-email-1.3.2-src.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.EmailTest.testBuildMimeMessage.classpath">
        <path refid="commons-email-1.3.2-src.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <mkdir dir="target/test-classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/resources">
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/resources">
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
        <delete dir="target/test-classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <src path="src/main/resources"/>
            <exclude name="**"/>
            <classpath refid="commons-email-1.3.2-src.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/test/java"/>
            <src path="src/test/resources"/>
            <exclude name="**"/>
            <classpath refid="commons-email-1.3.2-src.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="commons-email-1.3.2-src">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.apache.commons.mail.EmailTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.commons-email-1.3.2-src.classpath"/>
        </junit>
    </target>
    <target name="EmailTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.apache.commons.mail.EmailTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.EmailTest.classpath"/>
        </junit>
    </target>
    <target name="EmailTest.testAddHeaderEmptyName">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.apache.commons.mail.EmailTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.EmailTest.testAddHeaderEmptyName.classpath"/>
        </junit>
    </target>
    <target name="EmailTest.testBuildMimeMessage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.apache.commons.mail.EmailTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.EmailTest.testBuildMimeMessage.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
